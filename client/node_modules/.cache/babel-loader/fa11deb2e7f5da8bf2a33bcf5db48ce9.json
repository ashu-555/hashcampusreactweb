{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\gitzip\\\\ReactwebHashcampus\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\gitzip\\\\ReactwebHashcampus\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import ACTIONS from'./index';import axios from'axios';export var fetchAllUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/user/all_infor',{headers:{Authorization:token}});case 2:res=_context.sent;return _context.abrupt(\"return\",res);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchAllUsers(_x){return _ref.apply(this,arguments);};}();export var dispatchGetAllUsers=function dispatchGetAllUsers(res){return{type:ACTIONS.GET_ALL_USERS,payload:res.data};};","map":{"version":3,"sources":["D:/gitzip/ReactwebHashcampus/client/src/redux/actions/usersAction.js"],"names":["ACTIONS","axios","fetchAllUsers","token","get","headers","Authorization","res","dispatchGetAllUsers","type","GET_ALL_USERS","payload","data"],"mappings":"iUAAA,MAAOA,CAAAA,OAAP,KAAoB,SAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,aAAa,0FAAG,iBAAOC,KAAP,gJACPF,CAAAA,KAAK,CAACG,GAAN,CAAU,iBAAV,CAA6B,CAC3CC,OAAO,CAAE,CAACC,aAAa,CAAEH,KAAhB,CADkC,CAA7B,CADO,QACnBI,GADmB,+CAIlBA,GAJkB,wDAAH,kBAAbL,CAAAA,aAAa,4CAAnB,CAOP,MAAO,IAAMM,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACD,GAAD,CAAS,CACxC,MAAO,CACHE,IAAI,CAAET,OAAO,CAACU,aADX,CAEHC,OAAO,CAAEJ,GAAG,CAACK,IAFV,CAAP,CAIH,CALM","sourcesContent":["import ACTIONS from './index'\nimport axios from 'axios'\n\nexport const fetchAllUsers = async (token) => {\n    const res = await axios.get('/user/all_infor', {\n        headers: {Authorization: token}\n    })\n    return res\n}\n\nexport const dispatchGetAllUsers = (res) => {\n    return {\n        type: ACTIONS.GET_ALL_USERS,\n        payload: res.data\n    }\n}"]},"metadata":{},"sourceType":"module"}