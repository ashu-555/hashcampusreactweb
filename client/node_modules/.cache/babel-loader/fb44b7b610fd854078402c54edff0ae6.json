{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\gitzip\\\\ReactwebHashcampus\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\gitzip\\\\ReactwebHashcampus\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{BrowserRouter as Router}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{dispatchLogin,fetchUser,dispatchGetUser}from'./redux/actions/authAction';import Header from'./components/header/Header';import Routers from'./routers';import axios from'axios';function App(){var dispatch=useDispatch();var token=useSelector(function(state){return state.token;});var auth=useSelector(function(state){return state.auth;});useEffect(function(){var firstLogin=localStorage.getItem('firstLogin');if(firstLogin){var getToken=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post('/user/refresh_token',null);case 2:res=_context.sent;dispatch({type:'GET_TOKEN',payload:res.data.access_token});case 4:case\"end\":return _context.stop();}}},_callee);}));return function getToken(){return _ref.apply(this,arguments);};}();getToken();}},[auth.isLogged,dispatch]);useEffect(function(){if(token){var getUser=function getUser(){dispatch(dispatchLogin());return fetchUser(token).then(function(res){dispatch(dispatchGetUser(res));});};getUser();}},[token,dispatch]);return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Routers,null)));}export default App;","map":{"version":3,"sources":["D:/gitzip/ReactwebHashcampus/client/src/App.js"],"names":["React","useEffect","BrowserRouter","Router","useDispatch","useSelector","dispatchLogin","fetchUser","dispatchGetUser","Header","Routers","axios","App","dispatch","token","state","auth","firstLogin","localStorage","getItem","getToken","post","res","type","payload","data","access_token","isLogged","getUser","then"],"mappings":"iUAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,aAAa,GAAIC,CAAAA,MAAzB,KAAsC,kBAAtC,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,aAAR,CAAuBC,SAAvB,CAAkCC,eAAlC,KAAwD,4BAAxD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,GAAMU,CAAAA,KAAK,CAAGT,WAAW,CAAC,SAAAU,KAAK,QAAIA,CAAAA,KAAK,CAACD,KAAV,EAAN,CAAzB,CACA,GAAME,CAAAA,IAAI,CAAGX,WAAW,CAAC,SAAAU,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAN,CAAxB,CAEAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,UAAU,CAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB,CACA,GAAGF,UAAH,CAAc,CACZ,GAAMG,CAAAA,QAAQ,0FAAG,iKACGT,CAAAA,KAAK,CAACU,IAAN,CAAW,qBAAX,CAAkC,IAAlC,CADH,QACTC,GADS,eAEfT,QAAQ,CAAC,CAACU,IAAI,CAAE,WAAP,CAAoBC,OAAO,CAAEF,GAAG,CAACG,IAAJ,CAASC,YAAtC,CAAD,CAAR,CAFe,sDAAH,kBAARN,CAAAA,QAAQ,0CAAd,CAIAA,QAAQ,GACT,CACF,CATQ,CASP,CAACJ,IAAI,CAACW,QAAN,CAAgBd,QAAhB,CATO,CAAT,CAWAZ,SAAS,CAAC,UAAM,CACd,GAAGa,KAAH,CAAS,CACP,GAAMc,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBf,QAAQ,CAACP,aAAa,EAAd,CAAR,CAEA,MAAOC,CAAAA,SAAS,CAACO,KAAD,CAAT,CAAiBe,IAAjB,CAAsB,SAAAP,GAAG,CAAI,CAClCT,QAAQ,CAACL,eAAe,CAACc,GAAD,CAAhB,CAAR,CACD,CAFM,CAAP,CAGD,CAND,CAOAM,OAAO,GACR,CACF,CAXQ,CAWP,CAACd,KAAD,CAAQD,QAAR,CAXO,CAAT,CAcA,mBACE,oBAAC,MAAD,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,MAAD,MADF,cAEE,oBAAC,OAAD,MAFF,CADF,CADF,CAQD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {dispatchLogin, fetchUser, dispatchGetUser} from './redux/actions/authAction'\n\nimport Header from './components/header/Header'\nimport Routers from './routers'\nimport axios from 'axios';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.token)\n  const auth = useSelector(state => state.auth)\n\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin')\n    if(firstLogin){\n      const getToken = async () => {\n        const res = await axios.post('/user/refresh_token', null)\n        dispatch({type: 'GET_TOKEN', payload: res.data.access_token})\n      }\n      getToken()\n    }\n  },[auth.isLogged, dispatch])\n\n  useEffect(() => {\n    if(token){\n      const getUser = () => {\n        dispatch(dispatchLogin())\n\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res))\n        })\n      }\n      getUser()\n    }\n  },[token, dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Routers />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}